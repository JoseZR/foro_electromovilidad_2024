---
import speakers from "../data/speakers.ts";

import { getI18N } from "../i18n";
const i18n = getI18N(Astro.currentLocale);
---

<section
    id="speakers"
    class="px-8 md:px-16 pb-6 pt-4 mt-12 lg:px-24"
>
    <h3
        class="text-black text-2xl md:text-3xl lg:text-4xl font-normal font-open-sans leading-none uppercase flex items-center gap-2 mb-4"
    >
        <svg
            class="text-secondary h-[1.1rem] md:h-[1.3rem] lg:h-[1.6rem] w-auto"
            fill="currentColor"
            version="1.2"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 146 46"
            width="146"
            height="46"
        >
            <path d="m0 0h47v46h-47z"></path>
            <path d="m55.9 0h37v46h-37z"></path>
            <path d="m101 0h16v46h-16z"></path>
            <path d="m126 0h8v46h-8z"></path>
            <path d="m138 0h8v46h-8z"></path>
        </svg>
        {i18n.speakers.title}
    </h3>
    {
        speakers.length === 0 ? (
            <p class="text-black text-lg">{i18n.speakers.empty}</p>
        ) : (
            <div class="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
                {speakers.map((speaker) => {
                    if (speaker.profile) {
                        return (
                            <div data-modal-target={`speaker-${speaker.id}`} data-modal-toggle={`speaker-${speaker.id}`} class='relative group overflow-hidden cursor-pointer'>
                                <img
                                    class="group-hover:scale-105 transform transition-transform duration-300 rounded-lg w-full h-full"
                                    src={speaker.photo}
                                    alt={speaker.name}
                                />
                                <div class="absolute top-0 h-full w-full flex flex-col justify-end bg-gradient-to-b from-black/10 via-black/60 to-black/80 rounded-lg text-center p-4">
                                    <h4 class="text-white text-lg font-semibold font-open-sans mt-2">
                                        {speaker.name}
                                    </h4>
                                    <p class="text-white text-base font-normal font-open-sans mt-1">
                                        {speaker.position}
                                    </p>
                                </div>
                            </div>

                            <div id={`speaker-${speaker.id}`} tabindex="-1" class="hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full">
                                <div class="relative p-4 w-full max-w-2xl max-h-full">
                                    <div class="relative bg-white rounded-lg shadow">
                                        <div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t">
                                            <h3 class="text-xl font-semibold text-gray-900">
                                                {speaker.name}
                                            </h3>
                                            <button type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center" data-modal-hide={`speaker-${speaker.id}`}>
                                                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                                                </svg>
                                                <span class="sr-only">Close modal</span>
                                            </button>
                                        </div>
                                        <div class="p-4 md:p-5 space-y-4">
                                            {speaker.profile?.map((text) => (
                                                <p class="text-gray-600">{text}</p>
                                            ))}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        )
                    } else {
                        return (
                        <div class='relative group overflow-hidden'>
                            <img
                                class="group-hover:scale-105 transform transition-transform duration-300 rounded-lg w-full h-full"
                                src={speaker.photo}
                                alt={speaker.name}
                            />
                            <div class="absolute top-0 h-full w-full flex flex-col justify-end bg-gradient-to-b from-black/10 via-black/60 to-black/80 rounded-lg text-center p-4">
                                <h4 class="text-white text-lg font-semibold font-open-sans mt-2">
                                    {speaker.name}
                                </h4>
                                <p class="text-white text-base font-normal font-open-sans mt-1">
                                    {speaker.position}
                                </p>
                            </div>
                        </div>
                        )
                    }
                })}
            </div>
        )
    }
</section>
